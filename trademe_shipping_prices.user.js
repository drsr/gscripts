// ==UserScript==
// @name       TradeMe shipping prices
// @namespace  http://drsr/
// @version    0.9.2
// @description  Show shipping price, seller, and other auction details on search results, and thumbnail image for non-gallery items
// @include    http://www.trademe.co.nz/*
// @grant      none
// @copyright  public domain
// ==/UserScript==
// v0.9.2: Changes for Greasemonkey 2.0
// v0.9: TM moved the seller name
// v0.8: Tweaks to car details in search results in cases where TM already provides them
// v0.7: Add kilometres, engine size etc. to car search results if available
// v0.6: Add (NPU) if seller does not allow pickups
// v0.5: Fetch thumbnail image for non-gallery items, if another script has not already fetched it
// v0.4: show seller for classifieds and Motors too
// TODO:
// Hover to show full list of shipping prices
// Style to match buynow colour
// Better guess at correct price for user's region (needs to handle "North Island", "South Island", "Auckland" etc)
// Option to pick rural shipping

// replace trademe's JS error handler
window.onerror=function(msg, url, linenumber){
//    console.log('Error message: '+msg+'\nURL: '+url+'\nLine Number: '+linenumber);
        return true;
};
function addShipping(card, listing) {
    var shippingFirst = $("#AuctionSaleDetail_ShippingDetailsList li:first", listing).text();
    if (shippingFirst) {
        // \xa0 is character generated by &nbsp;
        var shippingPrice = shippingFirst.split("\xa0",2)[0];
        // abbreviate longer shipping descriptions to avoid disrupting columns too badly
        shippingPrice = shippingPrice.replace("To be arranged", "TBA")
        .replace("Free shipping within New Zealand", "Free")
        .replace("Buyer must pick-up", "Pick-up");
        var noPickups = $("#AuctionSaleDetail_ShippingDetailsList li:contains('Seller does not allow pick-ups')", listing).length > 0;
        if (noPickups) {
            shippingPrice += "&nbsp;(NPU)";
        }
        // Some items only have a buy now, not a bid price
        var priceLocation = $(".listingBidPrice", card);
        if (priceLocation.length == 0) {
            priceLocation = $(".listingBuyNowText", card);
        }
        priceLocation.append('<br/><span class="tmsp_shipping">+'+shippingPrice+"</span>");
    }
}

function findListingLocation(card) {
    var listingLocation = $(".listingLocation", card);
    if (listingLocation.length==0) {
        listingLocation = $('div[id $= "_listingLocation"]', card); // Motors
    }
    return listingLocation;
}

function addSeller(card, listing) {
    // add the seller name with link before the listing location
    var seller = $("#AuctionSaleDetail_MemberText a:first", listing);
    if (seller.length == 0) {
        seller = $("#ClassifiedActions_SellerStats a:first", listing);
    }
    if (seller.length == 0) {
        seller = $("#ClassifiedActions_DealerNameLinkDiv a:first", listing); // Motors
    }
    if (seller.length == 0) {
        seller = $("#ClassifiedActions_DealerName", listing).text(); // Motors
    }
    if (seller && seller.length > 0) {
        findListingLocation(card).prepend(",&nbsp;").prepend(seller);
    }
}

function addThumbnail(card, listing) {
	var thumbnailInCard = $(".listingImage img[src*=hasPhoto]", card); // non-gallery items with photos
    if (thumbnailInCard.length > 0) {
        var thumbnailInListingPath = $("#mainImage", listing).attr("src");
        if (thumbnailInListingPath) {
            thumbnailInCard.attr("src", thumbnailInListingPath.replace(/\/tq\//i, '/hfc/')); // get higher-def thumbnail without having to load the full-size image
            thumbnailInCard.css("max-width", "160px").css("max-height", "120px"); // some hfcs are wider than 160px, might be a bug, or deliberate?
        }
    }
}

function addCarStuff(card, listing) {
    var attribsToFetch = ["Registration expires", "WOF expires"];
    if ($("[id$=MotorCard_listingSpecs]", card).length==0) { // not sure why some cards have this and some don't
        ["Kilometres", "Engine size", "Engine"].concat(attribsToFetch);
    }
    
    // Try some house attribs
    ["Location", "Land area", "Parking"].concat(attribsToFetch);
    
    var listingAttribs = {};
    $("[id^=ListingAttributes_AttributesRepeater]", listing).each(
        function(index, attrib) {
            listingAttribs[$.trim(attrib.textContent).slice(0,-1)]=$.trim($(attrib).next().text());
        });
    var listingLocation = findListingLocation(card);
    var interestingAttribs = [];
    $.each(attribsToFetch, 
           function(index, attribName) { 
               if (listingAttribs[attribName]) {
                   if (attribName==='Location') {
                       	var locationText = listingAttribs[attribName].split("<br>").slice(0,1).join(" ");
                       	interestingAttribs.push(locationText);
                   } else {
                   		interestingAttribs.push(attribName + ": " + listingAttribs[attribName]);
                   }
               }
           });
    if (interestingAttribs.length > 0) {
        listingLocation.after('<div class="rightArrows">' + interestingAttribs.join(", ") + '</div>');
    }
}

function addStyle(style) {
	$("<style>").prop("type", "text/css").html(style).appendTo("head");
}
addStyle(".tmsp_shipping {font-size:11px; font-style: italic;}");

$("#ListViewList .listingCard").each(function(index, card){
    var auctionUrl = $(".listingTitle > a", card).attr('href');
    $.get(auctionUrl, function(listing) {
        addShipping(card, listing);
        addSeller(card, listing);
        addThumbnail(card, listing);
        addCarStuff(card, listing);
    });
});